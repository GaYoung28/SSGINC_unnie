<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssginc.unnie.review.mapper.ReviewMapper">

    <!-- 1) 리뷰 등록: review 테이블에 Insert 후 reviewId를 자동 매핑 -->
    <insert id="insertReview" useGeneratedKeys="true" keyProperty="reviewId" parameterType="com.ssginc.unnie.review.dto.ReviewCreateRequest">
        INSERT INTO review
        (
            review_member_id,
            review_receipt_id,
            review_image,
            review_rate,
            review_content
        )
        VALUES
            (
                #{reviewMemberId},
                #{reviewReceiptId},
                #{reviewImage},
                #{reviewRate},
                #{reviewContent}
            )
    </insert>

    <!-- 2) 리뷰-키워드 연결 정보 등록 (생성용) -->
    <insert id="insertReviewKeywordsForCreate" parameterType="com.ssginc.unnie.review.dto.ReviewCreateRequest">
        INSERT INTO review_keyword (keyword_id, review_id)
        VALUES
        <foreach collection="keywordIds" item="keywordId" separator=",">
            (#{keywordId}, #{reviewId})
        </foreach>
    </insert>

    <!-- 3) 리뷰에 연결된 키워드 목록 조회 -->
    <select id="selectReviewKeywordsByReviewId" resultType="java.lang.String" parameterType="long">
        SELECT k.keyword
        FROM review_keyword rk
                 JOIN keyword k ON rk.keyword_id = k.keyword_id
        WHERE rk.review_id = #{reviewId}
    </select>

    <!-- 4) 리뷰 상세 조회 쿼리 -->
    <select id="getReviewById" resultType="com.ssginc.unnie.review.dto.ReviewGetResponse" parameterType="long">
        SELECT
            r.review_id AS reviewId,
            r.review_member_id AS reviewMemberId,
            r.review_receipt_id AS reviewReceiptId,
            r.review_image AS reviewImage,
            r.review_rate AS reviewRate,
            r.review_content AS reviewContent,
            r.review_date AS reviewDate,
            m.member_nickname AS memberNickName,
            s.shop_name AS shopName
        FROM review r
                 JOIN member m ON r.review_member_id = m.member_id
                 JOIN receipt rc ON r.review_receipt_id = rc.receipt_id
                 JOIN shop s ON rc.receipt_shop_id = s.shop_id
        WHERE r.review_id = #{reviewId}
    </select>

    <!-- 5) 리뷰 수정 쿼리 -->
    <update id="updateReview" parameterType="com.ssginc.unnie.review.dto.ReviewUpdateRequest" keyProperty="reviewId" keyColumn="review_id">
        UPDATE review
        SET
            review_image = #{reviewImage},
            review_rate = #{reviewRate},
            review_content = #{reviewContent},
            review_date = CURRENT_TIMESTAMP
        WHERE review_id = #{reviewId}
    </update>

    <!-- 6) 리뷰 수정 시 기존의 키워드 관계 삭제 쿼리 -->
    <delete id="deleteReviewKeywords" parameterType="long">
        DELETE FROM review_keyword WHERE review_id = #{reviewId}
    </delete>

    <!-- 7) 리뷰-키워드 연결 정보 등록 (수정용) -->
    <insert id="insertReviewKeywordsForUpdate" parameterType="com.ssginc.unnie.review.dto.ReviewUpdateRequest">
        INSERT INTO review_keyword (keyword_id, review_id)
        VALUES
        <foreach collection="keywordIds" item="keywordId" separator=",">
            (#{keywordId}, #{reviewId})
        </foreach>
    </insert>

</mapper>
